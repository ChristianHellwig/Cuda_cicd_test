# Compile project on Ubuntu
name: ci

on:
  push:
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/Ubuntu.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            cuda: '11.3'
            built_tool_version: 10 #GCC Version
          - os: windows-2019
            cuda: '11.3'
            built_tool_version: 'Visual Studio 16 2019'

    env:
      build_dir: "build"
      config: "Release"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # - uses: Jimver/cuda-toolkit@v0.2.5
    #   id: cuda-toolkit
    #   with:
    #     cuda: ${{ matrix.cuda }}

    # - name: Cuda Version and Paths
    #   run: | 
    #     echo "Installed cuda version is: ${{steps.cuda-toolkit.outputs.cuda}}"
    #     echo "Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
    #     nvcc -V

    # - name: Install gcc and g++ 
    #   if: runner.os == 'Linux'
    #   run: |
    #     sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
    #     echo "CC=/usr/bin/gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
    #     echo "CXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV
    #     echo "CUDAHOSTCXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV

    # - name: Add msbuild to PATH
    #   if: runner.os == 'Windows'
    #   uses: microsoft/setup-msbuild@v1.1
    #   with:
    #     msbuild-architecture: x64

    - uses: actions/setup-python@v3
      with:
        python-version: '3.7' 
        architecture: 'x64' 

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.4.0
      env:
        CIBW_ARCHS: native
        CIBW_BUILD: cp37-*
        CIBW_ENVIRONMENT_PASS_LINUX: cuda='${{ matrix.cuda }}' built_tool_version='${{ matrix.built_tool_version }}' 
        CIBW_BEFORE_ALL_LINUX: scripts/install_build_environment_linux.sh
        CIBW_BEFORE_ALL_WINDOWS: scripts/install_build_environment_windows.sh
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
        CIBW_SKIP: pp* *-musllinux_*
    
    - name: Install build Linux
      if: runner.os == 'Linux'
      run: |
        wheelfile=$(find ./wheelhouse/ -type f -iname "*cp37m-manylinux*.whl") 
        pip install $wheelfile

    - name: Install build Windows
      if: runner.os == 'Windows'
      run: |
        $wheelfile = Get-ChildItem .\wheelhouse\ | Where-Object { $_.Name -match '.*cp37m-win_amd64.*' } | select -expand Name
        pip install ./wheelhouse/$wheelfile

    - name: Install Python Test Environment
      run: python -m pip install pytest

    - name: Run Python Test
      run: |
        python -m pytest test/test.py
